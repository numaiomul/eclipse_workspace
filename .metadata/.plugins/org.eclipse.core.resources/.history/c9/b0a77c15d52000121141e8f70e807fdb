package com.example.cis;

import java.io.IOException;
import java.io.InputStream;

import android.os.Bundle;
import android.os.Looper;
import android.util.Log;
import android.widget.Toast;
import android.app.Activity;
import android.content.Intent;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import org.apache.http.HttpResponse;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.StringEntity;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicHeader;
import org.apache.http.params.HttpConnectionParams;
import org.apache.http.protocol.HTTP;
import org.apache.http.util.EntityUtils;

@SuppressWarnings("unused")
public class LoadingActivity extends Activity{
	private final String TAG = "<<LoadingActivity";
	
	public void onCreate (Bundle savedInstanceState){
		super.onCreate(savedInstanceState);
		setContentView(R.layout.loading_scene);

		
		
		Thread t = new Thread(){
			public void run() {
                Looper.prepare(); //For Preparing Message Pool for the child Thread
                HttpClient client = new DefaultHttpClient();
                HttpConnectionParams.setConnectionTimeout(client.getParams(), 10000); //Timeout Limit
                HttpResponse response;
                JSONObject json = new JSONObject();
                try{ 				
	 				HttpGet post = new HttpGet("http://cis-cloud.azurewebsites.net/api/authentication/"+RestaurantInfo.MarkerID);
                    json.put("SSH", RestaurantInfo.MarkerID);
                    StringEntity se = new StringEntity( json.toString());  
                    se.setContentType(new BasicHeader(HTTP.CONTENT_TYPE, "application/json"));
                    post.setEntity(se);
                    response = client.execute(post);
                    /*Checking response */
                    if(response!=null){
                        InputStream in = response.getEntity().getContent(); //Get the data in the entity
                        Log.d(TAG,"in:"+in);
                    }
                }
                catch(Exception e){
                    e.printStackTrace();
                    Log.d("Error", "Cannot Estabilish Connection");
                }
                Looper.loop(); //Loop in the message queue
            
		  };
		};
        t.start();   
		//TODO:JSON Parser
		//** Hardcoding restaurant class to create restaurant interface and basic program prototype
		
        
		 RestaurantInfo.restaurantName="McConalds";
		 RestaurantInfo.numberOfProducts=3;
		 RestaurantInfo.productsList = RestaurantInfo.setMockList();
		 for(int i=0; i<RestaurantInfo.numberOfProducts; i++){
			 final ProductInfo tempProduct = new ProductInfo(32,43,"Mancare",2.5f);
			/*
			 tempProduct.setId(32);
			 tempProduct.setProviderId(43);
			 tempProduct.setName("Mancare");
			 tempProduct.setPrice(2.5f);*/
			 
			 RestaurantInfo.productsList.add(tempProduct);
		 }
		 //**Hardcoding finished
		 for(;;){}
	//	 Intent tempIntent = new Intent(this,RestaurantActivity.class);
		// startActivity(tempIntent);
	   
    }
}
